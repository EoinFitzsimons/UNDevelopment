/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package undevelopment;

import java.util.ArrayList;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.JOptionPane;

/**
 *
 * @author dmoc2
 */
public class BriefAboutGame extends javax.swing.JFrame {

    private int score=0;
    private int lives =5;
    private String fn;
    private String ln;
    
    ArrayList<String>example;
   
    private void loseLives() //gives the user a feel for how the actual lives system works
    {
        if(lives == 0)
        {
            JOptionPane.showMessageDialog(null,"Game Over!");
            scoreBTN.setVisible(false); 
            livesBTN.setVisible(false);
        }
    }
    
    
    private void addScore() //this method I thought would be good way of interacting with the user to make the app more fun
    {
          if(score == 10)
        {
            lives++; //just adds lives for each score the user gets
            JOptionPane.showMessageDialog(null, "You are getting good at this");
        }
        else if (score == 20)
        {
            lives =+5; //just adds lives for each score the user gets
            JOptionPane.showMessageDialog(null, "You are good at this");
        }
        else if(score == 30)
        {
            lives = 10; //just adds lives for each score the user gets
             JOptionPane.showMessageDialog(null, "You are great at this");
        }
        else if(score == 40)
        {
            lives = 15; //just adds lives for each score the user gets
            JOptionPane.showMessageDialog(null, "You are a little too good at this maybe you should play the game...");
        }
        else if(score == 50) //I set the limit to 50 so the user doesn't keep pressing the score button for the day
        {
            lives = 100; //just adds lives for each score the user gets
            JOptionPane.showMessageDialog(null, "Go play the game now, test your knowledge!");
            scoreBTN.setVisible(false); //turns off the button
            livesBTN.setVisible(false);//turns off the button
        }
    }
    
    /**
     * Creates new form BriefAboutGame
     */
    public BriefAboutGame() {
        initComponents();
        example = new ArrayList <>(); // intialize the array to the gui
        livesCounter.setText(""+lives); //intialize the lives to the gui
        scoreCounter.setText(""+score);//intialize the score to the gui
        
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        howToStartTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        explainingHowToStart = new javax.swing.JTextArea();
        headerLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayExample = new javax.swing.JTextArea();
        fnField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lnField = new javax.swing.JTextField();
        addBTNEX = new javax.swing.JButton();
        displatBTNEX = new javax.swing.JButton();
        menuBTN = new javax.swing.JButton();
        howToPlayTab = new javax.swing.JPanel();
        headerLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        explainGameDisplay = new javax.swing.JTextArea();
        displayCard = new javax.swing.JLabel();
        scoreLabel = new javax.swing.JLabel();
        livesLabel = new javax.swing.JLabel();
        scoreCounter = new javax.swing.JLabel();
        livesCounter = new javax.swing.JLabel();
        scoreBTN = new javax.swing.JButton();
        livesBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));

        howToStartTab.setBackground(new java.awt.Color(100, 150, 200));

        explainingHowToStart.setEditable(false);
        explainingHowToStart.setBackground(new java.awt.Color(229, 225, 205));
        explainingHowToStart.setColumns(20);
        explainingHowToStart.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        explainingHowToStart.setForeground(new java.awt.Color(0, 0, 0));
        explainingHowToStart.setLineWrap(true);
        explainingHowToStart.setRows(5);
        explainingHowToStart.setText("In order to start playing the game. \nThe first Step is to add an account, \nyou will be required to give a name.\n It does not accept numbers within the\n name. Next is to press the display \nbutton to get the id assigned to\n your name and then press start\nYou will be asked for your id \nnumber and then you can start\nplaying the game.\nHave fun with the example of \nadding your name\n\n");
        explainingHowToStart.setWrapStyleWord(true);
        jScrollPane1.setViewportView(explainingHowToStart);

        headerLabel1.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        headerLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLabel1.setText("How To Start Playing");

        displayExample.setBackground(new java.awt.Color(229, 225, 205));
        displayExample.setColumns(20);
        displayExample.setFont(new java.awt.Font("sansserif", 0, 20)); // NOI18N
        displayExample.setForeground(new java.awt.Color(0, 0, 0));
        displayExample.setRows(5);
        displayExample.setText("FirstName \t LastName \n" );
        jScrollPane2.setViewportView(displayExample);

        fnField.setBackground(new java.awt.Color(229, 225, 205));
        fnField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        fnField.setForeground(new java.awt.Color(0, 0, 0));
        fnField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fnFieldKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel2.setText("First name: ");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel3.setText("Last name:");

        lnField.setBackground(new java.awt.Color(229, 225, 205));
        lnField.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        lnField.setForeground(new java.awt.Color(0, 0, 0));
        lnField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lnFieldKeyTyped(evt);
            }
        });

        addBTNEX.setBackground(new java.awt.Color(229, 225, 205));
        addBTNEX.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        addBTNEX.setForeground(new java.awt.Color(0, 0, 0));
        addBTNEX.setText("ADD");
        addBTNEX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNEXActionPerformed(evt);
            }
        });

        displatBTNEX.setBackground(new java.awt.Color(229, 225, 205));
        displatBTNEX.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        displatBTNEX.setForeground(new java.awt.Color(0, 0, 0));
        displatBTNEX.setText("Display");
        displatBTNEX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displatBTNEXActionPerformed(evt);
            }
        });

        menuBTN.setBackground(new java.awt.Color(229, 225, 205));
        menuBTN.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        menuBTN.setForeground(new java.awt.Color(0, 0, 0));
        menuBTN.setText("Return To Menu");
        menuBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout howToStartTabLayout = new javax.swing.GroupLayout(howToStartTab);
        howToStartTab.setLayout(howToStartTabLayout);
        howToStartTabLayout.setHorizontalGroup(
            howToStartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(howToStartTabLayout.createSequentialGroup()
                .addGroup(howToStartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(howToStartTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(howToStartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(headerLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(howToStartTabLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(menuBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(addBTNEX, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(displatBTNEX, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(howToStartTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(howToStartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, howToStartTabLayout.createSequentialGroup()
                                .addGroup(howToStartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(howToStartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fnField)
                                    .addComponent(lnField, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        howToStartTabLayout.setVerticalGroup(
            howToStartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(howToStartTabLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(headerLabel1)
                .addGap(18, 18, 18)
                .addGroup(howToStartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(howToStartTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(howToStartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fnField, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(howToStartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lnField, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(howToStartTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displatBTNEX, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBTNEX, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(menuBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );

        jTabbedPane1.addTab("How To Start ", howToStartTab);

        howToPlayTab.setBackground(new java.awt.Color(100, 150, 200));
        howToPlayTab.setForeground(new java.awt.Color(0, 0, 0));

        headerLabel2.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        headerLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLabel2.setText("How To Play");

        explainGameDisplay.setBackground(new java.awt.Color(229, 225, 205));
        explainGameDisplay.setColumns(20);
        explainGameDisplay.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        explainGameDisplay.setForeground(new java.awt.Color(0, 0, 0));
        explainGameDisplay.setLineWrap(true);
        explainGameDisplay.setRows(5);
        explainGameDisplay.setText("In the game, once your account has been created and the id has been entered to start the game. You will be able to play. In the game you will be presented 3 choices and a fill in the blank choice of the question. If the answer you have entered is correct you will then be given a +1 to your score. If the answer is wrong you will lose a life. The game is based off card games that have you to fill in a blank. \n\nWhen you reach til the end of the game with lives remaining the game will end and you will be told to return to the score menu where you would have previously had entered your name.\n\nIf you lose all your lives during the game you will be told to return to the game and you will not be able to continue on with the current game. When you return to the score menu after your game you will be able to check your score and try beat it!\n\nPlease try out the example of the added score and the minus lives feature!");
        explainGameDisplay.setWrapStyleWord(true);
        jScrollPane3.setViewportView(explainGameDisplay);

        displayCard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sampleoflayout/img/spades.png"))); // NOI18N

        scoreLabel.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        scoreLabel.setText("Score");

        livesLabel.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        livesLabel.setText("Lives");

        scoreCounter.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        scoreCounter.setText("0");

        livesCounter.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        livesCounter.setText("0");

        scoreBTN.setBackground(new java.awt.Color(229, 225, 205));
        scoreBTN.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        scoreBTN.setForeground(new java.awt.Color(0, 0, 0));
        scoreBTN.setText("Score+");
        scoreBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scoreBTNActionPerformed(evt);
            }
        });

        livesBTN.setBackground(new java.awt.Color(229, 225, 205));
        livesBTN.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        livesBTN.setForeground(new java.awt.Color(0, 0, 0));
        livesBTN.setText("Lives-");
        livesBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                livesBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout howToPlayTabLayout = new javax.swing.GroupLayout(howToPlayTab);
        howToPlayTab.setLayout(howToPlayTabLayout);
        howToPlayTabLayout.setHorizontalGroup(
            howToPlayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(howToPlayTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(howToPlayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(howToPlayTabLayout.createSequentialGroup()
                        .addComponent(headerLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(howToPlayTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                        .addGroup(howToPlayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, howToPlayTabLayout.createSequentialGroup()
                                .addGroup(howToPlayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(howToPlayTabLayout.createSequentialGroup()
                                        .addComponent(scoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(scoreCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(48, 48, 48)
                                        .addComponent(livesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(livesCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(howToPlayTabLayout.createSequentialGroup()
                                        .addComponent(scoreBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(livesBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(46, 46, 46))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, howToPlayTabLayout.createSequentialGroup()
                                .addComponent(displayCard)
                                .addGap(99, 99, 99))))))
        );
        howToPlayTabLayout.setVerticalGroup(
            howToPlayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(howToPlayTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(howToPlayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, howToPlayTabLayout.createSequentialGroup()
                        .addGroup(howToPlayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(livesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                            .addComponent(scoreCounter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(scoreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(livesCounter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(displayCard, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(howToPlayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scoreBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(livesBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        jTabbedPane1.addTab("How To Play", howToPlayTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBTNEXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNEXActionPerformed
        // TODO add your handling code here:
        
        fn = fnField.getText(); //grabs the info from the field and will be added to the array
        ln = lnField.getText(); //grabs the info from the field and will be added to the array
        example.add(fn); //adds to the array
        example.add(ln); //adds to the array
        try{
        BufferedWriter bw = new BufferedWriter(new FileWriter("example.txt", false)); //writes to a text file 
        for(int i=0; i<example.size(); i++)
        {//open for 
            bw.write(example.toString()); //will write the array as a string to the file
            bw.newLine();//creates a new line for each data set added 
        }//close for
        bw.flush(); // same as os close, just ends the write process 
        System.out.println("Example save sucessfully!"); //lets the user know in the terminal that the person has been added 
        }
        catch(IOException e)
        {
            System.out.println("error "+e); //will print out the errors that the program may have
        }
        
    }//GEN-LAST:event_addBTNEXActionPerformed

    private void displatBTNEXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displatBTNEXActionPerformed
        // TODO add your handling code here:
        
        try
        {
            String content = new String(Files.readAllBytes(Paths.get("example.txt"))); //will read from the text file
            displayExample.append(content); //displays the text file 
            
        }
        catch(Exception e)
        {
            System.out.println("error "+e);
        }
        
        
    }//GEN-LAST:event_displatBTNEXActionPerformed

    private void livesBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_livesBTNActionPerformed
        // TODO add your handling code here:
        lives--;
        livesCounter.setText(""+lives);
        loseLives();
    }//GEN-LAST:event_livesBTNActionPerformed

    private void scoreBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scoreBTNActionPerformed
        // TODO add your handling code here:
        score++;
        scoreCounter.setText(""+score);
      addScore();
        livesCounter.setText(""+lives);
    }//GEN-LAST:event_scoreBTNActionPerformed

    private void menuBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBTNActionPerformed
        // TODO add your handling code here:
        UNDevelopmentMainMenuGUI load = new UNDevelopmentMainMenuGUI();
        load.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_menuBTNActionPerformed

    private void lnFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lnFieldKeyTyped
        // TODO add your handling code here:
         char c = evt.getKeyChar(); //creating a character event

        if(!Character.isLetter(c))//tracks of the users key typing
        { 
            evt.consume();
            JOptionPane.showMessageDialog(null, "Letters Only!"); //tells the user only letters are only accepted
            lnField.setText(""); //prevents numbers from being entered
        }
    }//GEN-LAST:event_lnFieldKeyTyped

    private void fnFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnFieldKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar(); //creating a character event

        if(!Character.isLetter(c)) //tracks of the users key typing
        {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Letters Only!"); //tells the user only letters are only accepted
            fnField.setText(""); //prevents numbers from being entered
        }
    }//GEN-LAST:event_fnFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BriefAboutGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BriefAboutGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BriefAboutGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BriefAboutGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
           
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BriefAboutGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBTNEX;
    private javax.swing.JButton displatBTNEX;
    private javax.swing.JLabel displayCard;
    private javax.swing.JTextArea displayExample;
    private javax.swing.JTextArea explainGameDisplay;
    private javax.swing.JTextArea explainingHowToStart;
    private javax.swing.JTextField fnField;
    private javax.swing.JLabel headerLabel1;
    private javax.swing.JLabel headerLabel2;
    private javax.swing.JPanel howToPlayTab;
    private javax.swing.JPanel howToStartTab;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton livesBTN;
    private javax.swing.JLabel livesCounter;
    private javax.swing.JLabel livesLabel;
    private javax.swing.JTextField lnField;
    private javax.swing.JButton menuBTN;
    private javax.swing.JButton scoreBTN;
    private javax.swing.JLabel scoreCounter;
    private javax.swing.JLabel scoreLabel;
    // End of variables declaration//GEN-END:variables
}
